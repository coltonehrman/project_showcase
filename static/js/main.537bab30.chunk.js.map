{"version":3,"sources":["controllers/storage.js","components/NavBar.js","components/Section.js","components/TechSection.js","components/Card.js","components/DescriptionSection.js","components/GoalSection.js","components/TargetAudienceSection.js","components/ImpactSection.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["_storage","_data","projects","_save","jsonString","JSON","stringify","localStorage","setItem","_controller","getJSON","mode","_staticJSON","Error","getProjects","Object","keys","addProject","project","setProject","data","_get","_pc","getTech","technologies","getDescription","description","getGoals","goals","getTargetAudience","targetAudience","getImpacts","impacts","getImages","images","setTech","setDescription","setGoals","setTargetAudience","setImpacts","setImages","getItem","parse","Storage","NavHeader","title","children","className","NavFooter","currentProject","addNewProject","useContext","ModeContext","setMode","onClick","filename","json","$e","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","download","storage","indexOf","ProjectLinks","useState","setProjects","useEffect","map","text","editing","i","e","target","value","saveProject","trim","splice","key","onChange","onBlur","autoFocus","to","ProjectDetailLinks","useParams","activeClassName","replace","exact","NavBar","path","Section","sectionStyle","bodyStyle","noop","TechTab","color","styles","first","last","setValue","setEditing","_styles","backgroundColor","marginLeft","marginRight","type","width","length","onKeyDown","TechSection","store","tech","t","editTech","newTech","setEditingFor","finishEditingTech","paddingLeft","paddingRight","border","cursor","Card","DescriptionSection","split","d","GoalSection","g","setGoalValue","editGoal","doneEditing","flex","TargetAudienceSection","audience","setAudience","ta","setAudienceValue","editAudience","ImpactSection","setImpactValue","editImpact","Title","Dashboard","fileInput","useRef","window","location","addImages","toAdd","newImages","flexWrap","alignItems","current","ref","processedImages","totalFiles","files","reader","FileReader","file","onload","push","result","readAsDataURL","multiple","image","src","React","createContext","ProjectCards","history","useHistory","rows","Math","ceil","row","rowElements","colElements","background","backgroundSize","bgImage","height","borderRadius","renderProjectRows","App","Provider","overflow","padding","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.537bab30.chunk.js","sourcesContent":["import _staticJSON from '../data.json'\n\nconst Storage = () => {\n  const STORAGE_KEY = 'projects_data'\n\n  let _data = {\n    projects: {\n\n    }\n  }\n\n  const _save = () => {\n    const jsonString = JSON.stringify(_data)\n    localStorage.setItem(STORAGE_KEY, jsonString)\n  }\n\n  const _controller = {\n    getJSON: (mode = 'static') => {\n      if (mode === 'static') {\n        return _staticJSON\n      } else if (mode === 'edit') {\n        return _data\n      } else {\n        throw new Error(`Invalid mode for store: ${mode}`)\n      }\n    },\n    getProjects: (mode = 'static') => {\n      if (mode === 'static') {\n        return Object.keys(_staticJSON.projects)\n      } else if (mode === 'edit') {\n        return Object.keys(_data.projects)\n      } else {\n        throw new Error(`Invalid mode for store: ${mode}`)\n      }\n    },\n    addProject: (project) => {\n      if (!_data.projects[project]) {\n        _data.projects[project] = {}\n        _save()\n      }\n    },\n    setProject: (project, data) => {\n      _data.projects[project] = data\n      _save()\n    },\n    project: (project, mode = 'static') => {\n      let _get\n\n      if (mode === 'static') {\n        _get = () => _staticJSON.projects[project] || {}\n      } else if (mode === 'edit') {\n        _get = () => _data.projects[project] || {}\n      } else {\n        throw new Error(`Invalid mode for store: ${mode}`)\n      }\n\n      const _pc = {\n        // GETTERS\n        getTech: () => _get().technologies || [],\n        getDescription: () => _get().description || '',\n        getGoals: () => _get().goals || [],\n        getTargetAudience: () => _get().targetAudience || [],\n        getImpacts: () => _get().impacts || [],\n        getImages: () => _get().images || [],\n        // SETTERS\n        setTech: (technologies) => {\n          _get().technologies = technologies\n          _save()\n        },\n        setDescription: (description) => {\n          _get().description = description\n          _save()\n        },\n        setGoals: (goals) => {\n          _get().goals = goals\n          _save()\n        },\n        setTargetAudience: (targetAudience) => {\n          _get().targetAudience = targetAudience\n          _save()\n        },\n        setImpacts: (impacts) => {\n          _get().impacts = impacts\n          _save()\n        },\n        setImages: (images) => {\n          _get().images = images\n          _save()\n        },\n      }\n\n      return _pc\n    }\n  }\n\n  // Initialize localStorage\n  if (!localStorage.getItem(STORAGE_KEY))\n    _save()\n  else {\n    _data = JSON.parse(localStorage.getItem(STORAGE_KEY))\n  }\n\n  return _controller\n}\n\nconst _storage = Storage()\n\nexport default _storage\n","import React, { useState, useContext, useEffect } from 'react'\nimport { Route, NavLink, useParams } from 'react-router-dom'\nimport { ModeContext } from '../App'\nimport storage from '../controllers/storage'\nimport '../css/NavBar.css'\n\nfunction download(filename, json) {\n  const $e = document.createElement('a')\n  $e.setAttribute('href', 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(json)))\n  $e.setAttribute('download', filename)\n\n  $e.style.display = 'none'\n  document.body.appendChild($e)\n  $e.click()\n  document.body.removeChild($e)\n}\n\nconst NavHeader = ({ title, children }) => {\n  return (\n    <div className=\"navbar--header\">\n      <h4 className=\"navbar--header__title\">{title}</h4>\n      {children}\n    </div>\n  )\n}\n\nconst NavFooter = ({ currentProject = null, addNewProject = false }) => {\n  const { mode, setMode } = useContext(ModeContext)\n\n  return (\n    <div className=\"navbar--footer\">\n      {mode === 'edit' &&\n        <>\n          {addNewProject &&\n            <button\n              className=\"navlink navlink--add\"\n              onClick={addNewProject}\n            >\n              + New Project\n            </button>\n          }\n\n          <button\n            className=\"navlink navlink--export\"\n            onClick={() => download('projects.json', storage.getJSON(mode))}\n          >\n            Export Data\n          </button>\n        </>\n      }\n\n      <button\n        className={`navlink navlink--mode navlink--mode__${mode}`}\n        onClick={() => {\n          if (mode === 'static') {\n            // check if project doesn't exist in edit mode\n            if (currentProject && storage.getProjects('edit').indexOf(currentProject) === -1) {\n              // set static project for editing\n              storage.setProject(currentProject, storage.getJSON().projects[currentProject])\n            }\n          }\n          if (mode === 'static') {\n            setMode('edit')\n          } else if (mode === 'edit') {\n            setMode('static')\n          }\n        }}\n      >\n        MODE: <span className=\"navlink--mode__type\">{mode}</span>\n      </button>\n    </div>\n  )\n}\n\nconst ProjectLinks = () => {\n  const { mode } = useContext(ModeContext)\n\n  const [projects, setProjects] = useState(null)\n\n  useEffect(() => {\n    setProjects(\n      storage.getProjects(mode).map(project => ({\n        text: project, editing: false\n      }))\n    )\n  }, [mode])\n\n  const addNewProject = () => {\n    setProjects([...projects, { text: '', editing: true }])\n  }\n\n  const setProject = (i) => (e) => {\n    projects[i].text = e.target.value\n    setProjects([...projects])\n  }\n\n  const saveProject = (i) => () => {\n    projects[i].editing = false\n\n    if (projects[i].text.trim() === '') {\n      projects.splice(i, 1)\n      return setProjects([...projects])\n    }\n\n    setProjects([...projects])\n    storage.addProject(projects[i].text)\n  }\n\n  if (!projects) return null\n\n  return (\n    <div className=\"navbar\">\n      <NavHeader title=\"My Projects\">\n        <div className=\"navbar--links\">\n          {projects.map((project, i) => (\n            (project.editing) ?\n              <input\n                key={i}\n                value={project.text}\n                className=\"navlink navlink--edit\"\n                onChange={setProject(i)}\n                onBlur={saveProject(i)}\n                autoFocus\n              /> :\n              <NavLink\n                key={i}\n                to={`/${project.text}/`}\n                className=\"navlink\"\n              >\n                {project.text}\n              </NavLink>\n          ))}\n        </div>\n      </NavHeader>\n\n      <NavFooter addNewProject={addNewProject} />\n    </div>\n  )\n}\n\nconst ProjectDetailLinks = () => {\n  const { project } = useParams()\n\n  return (\n    <div className=\"navbar\">\n      <NavHeader title={project}>\n        <div className=\"navbar--links\">\n          <NavLink\n            to={`/${project}/`}\n            className=\"navlink\"\n            activeClassName=\"navlink--active\"\n            replace\n            exact\n          >\n            Dashboard\n          </NavLink>\n        </div>\n      </NavHeader>\n\n      <NavFooter currentProject={project} />\n    </div>\n  )\n}\n\nconst NavBar = () => {\n  return (\n    <>\n      <Route path=\"/\" exact>\n        <ProjectLinks />\n      </Route>\n\n      <Route path=\"/:project\">\n        <ProjectDetailLinks />\n      </Route>\n    </>\n  )\n}\n\nexport default NavBar\n","import React from 'react'\nimport '../css/Section.css'\n\nconst Section = ({\n  title,\n  sectionStyle = {},\n  bodyStyle = {},\n  children\n}) => {\n  return (\n    <div className=\"section\" style={sectionStyle}>\n      <h6\n        className=\"section--title\"\n      >\n          {title}\n        </h6>\n      <div className=\"section--body\" style={bodyStyle}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Section\n","import React, { useState, useContext, useEffect } from 'react'\nimport Section from './Section'\nimport { ModeContext } from '../App'\n\nconst noop = () => {}\n\nconst TechTab = ({\n  color,\n  styles = {},\n  first = false,\n  last = false,\n  editing = false,\n  onChange = noop,\n  setValue = noop,\n  setEditing = noop,\n  onClick = false,\n  children\n}) => {\n  let _styles = {\n    ...styles\n  }\n\n  if (color) {\n    _styles.backgroundColor = color\n  }\n\n  if (first) {\n    _styles.marginLeft = '0'\n  }\n\n  if (last) {\n    _styles.marginRight = '0'\n  }\n\n  const renderBody = () => {\n    if (!editing)\n      return children\n    return (\n      <input\n        type=\"text\"\n        value={children}\n        className=\"dashboard--techtab__edit\"\n        style={{\n          width: `${children.length * 10}px`\n        }}\n        onChange={(e) => onChange(e.target.value)}\n        onKeyDown={({ key }) => (key === 'Enter' || key === 'Return') && setValue()}\n        onBlur={setValue}\n        autoFocus\n      />\n    )\n  }\n\n  return (\n    <div\n      className=\"dashboard--techtab\"\n      style={_styles}\n      onClick={onClick || setEditing}\n    >\n      {renderBody()}\n    </div>\n  )\n}\n\nconst TechSection = ({ store }) => {\n  const { mode } = useContext(ModeContext)\n  const [tech, setTech] = useState([])\n\n  useEffect(() => {\n    setTech(\n      store.getTech().map(t => ({\n        text: t, editing: false\n      }))\n    )\n  }, [mode])\n\n  const [editing, setEditing] = useState(false)\n\n  const addTech = () => {\n    setTech([...tech, { text: '', editing: true }])\n    setEditing(true)\n  }\n\n  const editTech = (i) => (newTech) => {\n    tech[i].text = newTech\n    setTech([...tech])\n  }\n\n  const setEditingFor = (i) => () => {\n    if (mode === 'edit') {\n      tech[i].editing = true\n      setEditing(true)\n    }\n  }\n\n  const finishEditingTech = (i) => () => {\n    if (tech[i].text.trim() === '')\n      tech.splice(i, 1)\n    else\n      tech[i].editing = false\n\n    setTech([...tech])\n    setEditing(false)\n    store.setTech(tech.map(t => t.text))\n  }\n\n  return (\n    <Section title=\"Technologies Used\">\n      {tech && tech.map((t, i) => (\n        <TechTab\n          key={i}\n          first={i === 0}\n          color=\"#705CF1\"\n          editing={t.editing}\n          onChange={editTech(i)}\n          setEditing={setEditingFor(i)}\n          setValue={finishEditingTech(i)}\n        >\n          {t.text}\n        </TechTab>\n      ))}\n\n      {(mode === 'edit') && !editing && <TechTab\n        last\n        color=\"transparent\"\n        styles={{\n          color: '#705CF1',\n          paddingLeft: '20px',\n          paddingRight: '20px',\n          border: '2px solid #705CF1',\n          cursor: 'pointer'\n        }}\n        onClick={() => addTech()}\n      >\n        +\n      </TechTab>}\n    </Section>\n  )\n}\n\nexport default TechSection\n","import React from 'react'\nimport '../css/Card.css'\n\nconst noop = () => {}\n\nconst Card = ({\n  style = {},\n  onClick = noop,\n  children\n}) => (\n  <div style={style} className=\"card\" onClick={onClick}>\n    {children}\n  </div>\n)\n\nexport default Card\n","import React, { useState, useContext, useEffect } from 'react'\nimport TextareaAutosize from 'react-textarea-autosize'\nimport Section from './Section'\nimport Card from './Card'\nimport { ModeContext } from '../App'\n\nconst DescriptionSection = ({ store }) => {\n  const { mode } = useContext(ModeContext)\n  const [description, setDescription] = useState('')\n\n  useEffect(() => {\n    setDescription(store.getDescription())\n  }, [mode])\n  \n  const [editing, setEditing] = useState(false)\n\n  const doneEditing = () => {\n    setEditing(false)\n    store.setDescription(description)\n  }\n\n  return (\n    <Section title=\"Project Description\">\n      <Card onClick={() => setEditing(mode === 'edit')}>\n        <h4\n          className=\"dashboard--description\"\n        >\n          {editing &&\n            <TextareaAutosize\n              value={description}\n              className=\"dashboard--description__edit\"\n              onChange={(e) => setDescription(e.target.value)}\n              onBlur={doneEditing}\n              autoFocus\n            />\n          }\n          {!editing && description.split('\\n\\n').map((d, i) => (\n            <p key={i}>{d}</p>\n          ))}\n        </h4>\n      </Card>\n    </Section>\n  )\n}\n\nexport default DescriptionSection\n","import React, { useState, useContext, useEffect } from 'react'\nimport Section from './Section'\nimport Card from './Card'\nimport { ModeContext } from '../App'\n\nconst GoalSection = ({ store }) => {\n  const { mode } = useContext(ModeContext)\n  const [goals, setGoals] = useState([])\n\n  useEffect(() => {\n    setGoals(\n      store.getGoals().map(g => ({\n        text: g, editing: false\n      }))\n    )\n  }, [mode])\n\n  const [editing, setEditing] = useState(false)\n\n  const addGoal = () => {\n    setEditing(true)\n    setGoals([ ...goals, { text: '', editing: true }])\n  }\n\n  const setGoalValue = (i) => (e) => {\n    goals[i].text = e.target.value\n    setGoals([...goals])\n  }\n\n  const editGoal = (i) => () => {\n    if (mode === 'edit') {\n      goals[i].editing = true\n      setGoals([...goals])\n    }\n  }\n\n  const doneEditing = (i) => () => {\n    setEditing(false)\n    goals[i].editing = false\n\n    if (goals[i].text.trim() === '') {\n      goals.splice(i, 1)\n    }\n\n    setGoals([...goals])\n    store.setGoals(goals.map(g => g.text))\n  }\n\n  return (\n    <Section\n      title=\"Goal\"\n      sectionStyle={{ flex: '1' }}\n      bodyStyle={{ paddingRight: '12.5px' }}\n    >\n      <Card>\n        <ul className=\"dashboard--list\">\n          {goals.map((g, i) => (\n            <li\n              key={i}\n              onClick={editGoal(i)}\n            >\n              {g.editing &&\n                <input\n                  className=\"dashboard--list__edit\"\n                  value={g.text}\n                  onChange={setGoalValue(i)}\n                  onBlur={doneEditing(i)}\n                  autoFocus\n                />\n              }\n              {!g.editing && g.text}\n            </li>\n          ))}\n        </ul>\n\n        {(mode === 'edit') && !editing &&\n          <button\n            className=\"dashboard--list__add\"\n            onClick={addGoal}\n          >\n            +\n          </button>\n        }\n      </Card>\n    </Section>\n  )\n}\n\nexport default GoalSection\n","import React, { useState, useContext, useEffect } from 'react'\nimport Section from './Section'\nimport Card from './Card'\nimport { ModeContext } from '../App'\n\nconst TargetAudienceSection = ({ store }) => {\n  const { mode } = useContext(ModeContext)\n  const [audience, setAudience] = useState([])\n\n  useEffect(() => {\n    setAudience(\n      store.getTargetAudience().map(ta => ({\n        text: ta, editing: false\n      }))\n    )\n  }, [mode])\n\n  const [editing, setEditing] = useState(false)\n\n  const addAudience = () => {\n    setEditing(true)\n    setAudience([ ...audience, { text: '', editing: true }])\n  }\n\n  const setAudienceValue = (i) => (e) => {\n    audience[i].text = e.target.value\n    setAudience([...audience])\n  }\n\n  const editAudience = (i) => () => {\n    if (mode === 'edit') {\n      audience[i].editing = true\n      setAudience([...audience])\n    }\n  }\n\n  const doneEditing = (i) => () => {\n    setEditing(false)\n    audience[i].editing = false\n\n    if (audience[i].text.trim() === '') {\n      audience.splice(i, 1)\n    }\n\n    setAudience([...audience])\n    store.setTargetAudience(audience.map(ta => ta.text))\n  }\n\n  return (\n    <Section\n      title=\"Target Audience\"\n      sectionStyle={{ flex: '1' }}\n      bodyStyle={{ paddingLeft: '12.5px' }}\n    >\n      <Card>\n        <ul className=\"dashboard--list\">\n          {audience.map((g, i) => (\n            <li\n              key={i}\n              onClick={editAudience(i)}\n            >\n              {g.editing &&\n                <input\n                  className=\"dashboard--list__edit\"\n                  value={g.text}\n                  onChange={setAudienceValue(i)}\n                  onBlur={doneEditing(i)}\n                  autoFocus\n                />\n              }\n              {!g.editing && g.text}\n            </li>\n          ))}\n        </ul>\n\n        {(mode === 'edit') && !editing &&\n          <button\n            className=\"dashboard--list__add\"\n            onClick={addAudience}\n          >\n            +\n          </button>\n        }\n      </Card>\n    </Section>\n  )\n}\n\nexport default TargetAudienceSection\n","import React, { useState, useContext, useEffect } from 'react'\nimport Section from './Section'\nimport Card from './Card'\nimport { ModeContext } from '../App'\n\nconst ImpactSection = ({ store }) => {\n  const { mode } = useContext(ModeContext)\n\n  const [impacts, setImpacts] = useState([])\n\n  useEffect(() => {\n    setImpacts(\n      store.getImpacts().map(i => ({\n        text: i, editing: false\n      }))\n    )\n  }, [mode])\n\n  const [editing, setEditing] = useState(false)\n\n  const addImpact = () => {\n    setEditing(true)\n    setImpacts([ ...impacts, { text: '', editing: true }])\n  }\n\n  const setImpactValue = (i) => (e) => {\n    impacts[i].text = e.target.value\n    setImpacts([...impacts])\n  }\n\n  const editImpact = (i) => () => {\n    if (mode === 'edit') {\n      impacts[i].editing = true\n      setImpacts([...impacts])\n    }\n  }\n\n  const doneEditing = (i) => () => {\n    setEditing(false)\n    impacts[i].editing = false\n\n    if (impacts[i].text.trim() === '') {\n      impacts.splice(i, 1)\n    }\n\n    setImpacts([...impacts])\n    store.setImpacts(impacts.map(i => i.text))\n  }\n\n  return (\n    <Section\n      title=\"Impact\"\n      sectionStyle={{ flex: '1' }}\n      bodyStyle={{ paddingLeft: '12.5px' }}\n    >\n      <Card>\n        <ul className=\"dashboard--list\">\n          {impacts.map((g, i) => (\n            <li\n              key={i}\n              onClick={editImpact(i)}\n            >\n              {g.editing &&\n                <input\n                  className=\"dashboard--list__edit\"\n                  value={g.text}\n                  onChange={setImpactValue(i)}\n                  onBlur={doneEditing(i)}\n                  autoFocus\n                />\n              }\n              {!g.editing && g.text}\n            </li>\n          ))}\n        </ul>\n\n        {(mode === 'edit') && !editing &&\n          <button\n            className=\"dashboard--list__add\"\n            onClick={addImpact}\n          >\n            +\n          </button>\n        }\n      </Card>\n    </Section>\n  )\n}\n\nexport default ImpactSection\n","import React, { useState, useContext, useRef, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport TechSection from './TechSection'\nimport DescriptionSection from './DescriptionSection'\nimport GoalSection from './GoalSection'\nimport TargetAudienceSection from './TargetAudienceSection'\nimport ImpactSection from './ImpactSection'\nimport Section from './Section'\nimport { ModeContext } from '../App'\nimport storage from '../controllers/storage'\nimport '../css/Dashboard.css'\nimport '../css/ImageSection.css'\n\nconst Title = ({ children }) => (\n  <div className=\"dashboard--header-title\">\n    <h3 className=\"dashboard--header-title__h4\">{children}</h3>\n  </div>\n)\n\nconst SocialLink = ({ url, icon }) => {\n  let Icon\n\n  if (icon === 'github') {\n    Icon = <i className=\"fa fa-github\"></i>\n  }\n\n  return (\n    <a\n      href={url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {Icon}\n    </a>\n  )\n}\n\nconst Dashboard = () => {\n  const { mode } = useContext(ModeContext)\n  const { project } = useParams()\n  const fileInput = useRef(null)\n  let store = storage.project(project, mode)\n\n  const [images, setImages] = useState([])\n\n  useEffect(() => {\n    store = storage.project(project, mode)\n    setImages(store.getImages())\n  }, [mode])\n\n  if (!store) {\n    window.location = '/'\n    return null\n  }\n\n  const addImages = (toAdd) => {\n    const newImages = [...images, ...toAdd]\n    store.setImages(newImages)\n    setImages(newImages)\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard--header\">\n        <Title>\n          {project}\n        </Title>\n\n        <div className=\"dashboard--header-links\">\n          {/* Need to use something like `store.getLinks()` here */}\n          {/* <SocialLink url=\"https://github.com\" icon=\"github\" /> */}\n        </div>\n      </div>\n      \n      <TechSection store={store} />\n      <DescriptionSection store={store} />\n\n      <div style={{ display: 'flex' }}>\n        <GoalSection store={store} />\n        <TargetAudienceSection store={store} />\n        <ImpactSection store={store} />\n      </div>\n\n      <Section\n        title=\"Images\"\n        bodyStyle={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          alignItems: 'center'\n        }}\n      >\n        {mode === 'edit' &&\n          <div\n            className=\"dashboard--image__add\"\n            onClick={() => fileInput.current.click()}\n          >\n            <span>+</span>\n            <input ref={fileInput} onChange={(e) => {\n              const processedImages = []\n              const totalFiles = e.target.files.length\n\n              for (let i = 0; i < totalFiles; ++i) {\n                const reader = new FileReader()\n                const file = e.target.files[i]\n\n                reader.onload = (e) => {\n                  processedImages.push(e.target.result)\n\n                  if (processedImages.length === totalFiles) {\n                    addImages(processedImages)\n                  }\n                }\n\n                reader.readAsDataURL(file)\n              }\n            }} style={{ display: 'none' }} type=\"file\" multiple />\n          </div>\n        }\n\n        {images.map((image, i) => (\n          <img className=\"image\" key={i} src={image} />\n        ))}\n      </Section>\n    </div>\n  )\n}\n\nexport default Dashboard\n","import React, { useState, useContext } from 'react';\nimport { Route, useHistory } from 'react-router-dom'\nimport NavBar from './components/NavBar'\nimport Dashboard from './components/Dashboard'\nimport Section from './components/Section'\nimport Card from './components/Card'\nimport storage from './controllers/storage'\nimport './css/App.css'\n\nexport const ModeContext = React.createContext('static')\n\nfunction ProjectCards() {\n  const history = useHistory()\n  const { mode } = useContext(ModeContext)\n\n  const renderProjectRows = () => {\n    const projects = [...storage.getProjects(mode)]\n    const rows = Math.ceil(projects.length / 4)\n    let row = 0\n    const rowElements = []\n\n    while (row++ < rows) {\n      const colElements = projects.splice(0, 4).map((project, i) => {\n        let paddingRight = '25px'\n        let paddingLeft = '25px'\n        if (i !== 3) paddingRight = '12.5px'\n        if (i !== 0) paddingLeft = '12.5px'\n\n        let background = ''\n        let backgroundSize = ''\n        const bgImage = storage.project(project, mode).getImages()[0]\n\n        if (bgImage) {\n          background = `url(${bgImage}) no-repeat center center`\n          backgroundSize = 'cover'\n        }\n\n        return (\n          <Section\n            key={i}\n            title={project}\n            bodyStyle={{ paddingRight, paddingLeft }}\n            sectionStyle={{ width: '25%' }}\n          >\n            <Card\n              style={{\n                background,\n                backgroundSize,\n                height: '250px',\n                borderRadius: '0.5rem',\n                cursor: 'pointer'\n              }}\n              onClick={() => history.push(`/${project}`)}\n            ></Card>\n          </Section>\n        )\n      })\n\n      rowElements.push(\n        <div key={row} style={{ display: 'flex' }}>\n          {colElements}\n        </div>\n      )\n    }\n\n    return rowElements\n  }\n\n  return renderProjectRows()\n}\n\nfunction App() {\n  const [mode, setMode] = useState('static')\n\n  return (\n    <ModeContext.Provider value={{ mode, setMode }}>\n      <div className=\"App\">\n        <div className=\"container\">\n          <NavBar />\n\n          <Route path=\"/\" exact>\n            <div style={{ flex: '4', overflow: 'scroll' }}>\n              <div style={{ padding: '2rem 0' }}>\n                <ProjectCards />\n              </div>\n            </div>\n          </Route>\n\n          <Route path=\"/:project/\" exact>\n            <Dashboard />\n          </Route>\n        </div>\n      </div>\n    </ModeContext.Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router\n} from 'react-router-dom'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './css/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}