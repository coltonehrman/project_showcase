{"version":3,"sources":["controllers/storage.js","components/NavBar.js","components/Section.js","components/TechSection.js","components/Card.js","components/DescriptionSection.js","components/GoalSection.js","components/TargetAudienceSection.js","components/ImpactSection.js","components/Dashboard.js","components/DesignIdeas.js","App.js","serviceWorker.js","index.js"],"names":["_storage","_data","projects","_save","jsonString","JSON","stringify","localStorage","setItem","_controller","getJSON","staticData","_staticJSON","getProjects","Object","keys","addProject","project","_get","mode","Error","_pc","getTech","technologies","getDescription","description","getGoals","goals","getTargetAudience","targetAudience","getImpacts","impacts","getImages","images","setTech","setDescription","setGoals","setTargetAudience","setImpacts","setImages","getItem","parse","Storage","NavHeader","title","children","className","NavFooter","addNewProject","useContext","ModeContext","setMode","onClick","to","ProjectLinks","useState","setProjects","useEffect","storage","map","text","editing","setProject","i","e","target","value","saveProject","trim","splice","key","onChange","onBlur","autoFocus","ProjectDetailLinks","useParams","activeClassName","replace","exact","NavBar","path","Section","sectionStyle","bodyStyle","style","noop","TechTab","color","styles","first","last","setValue","setEditing","_styles","backgroundColor","marginLeft","marginRight","type","width","length","onKeyDown","TechSection","store","tech","t","editTech","newTech","setEditingFor","finishEditingTech","paddingLeft","paddingRight","border","cursor","Card","DescriptionSection","split","d","GoalSection","g","setGoalValue","editGoal","doneEditing","flex","TargetAudienceSection","audience","setAudience","ta","setAudienceValue","editAudience","ImpactSection","setImpactValue","editImpact","Title","Dashboard","history","useHistory","fileInput","useRef","window","location","addImages","toAdd","newImages","display","flexWrap","alignItems","current","click","ref","processedImages","totalFiles","files","reader","FileReader","file","onload","push","result","readAsDataURL","multiple","image","src","DesignIdeas","React","createContext","App","search","useLocation","Provider","overflow","margin","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bb07f13f.chunk.js","sourcesContent":["import _staticJSON from '../data.json'\n\nconst Storage = () => {\n  const STORAGE_KEY = 'projects_data'\n\n  let _data = {\n    projects: {\n\n    }\n  }\n\n  const _save = () => {\n    const jsonString = JSON.stringify(_data)\n    localStorage.setItem(STORAGE_KEY, jsonString)\n  }\n\n  const _controller = {\n    getJSON: ({ staticData = false } = {}) => {\n      if (staticData) {\n        return JSON.stringify(_staticJSON, null, 2)\n      }\n\n      return JSON.stringify(_data, null, 2)\n    },\n    getProjects: ({ staticData = false } = {}) => {\n      if (staticData) {\n        return Object.keys(_staticJSON.projects)\n      }\n      return Object.keys(_data.projects)\n    },\n    addProject: (project) => {\n      if (!_data.projects[project]) {\n        _data.projects[project] = {}\n        _save()\n      }\n    },\n    project: (project, mode = 'static') => {\n      let _get\n\n      if (mode === 'static') {\n        _get = () => _staticJSON.projects[project]\n      } else if (mode === 'edit') {\n        _get = () => _data.projects[project]\n      } else {\n        throw new Error(`Invalid mode for store: ${mode}`)\n      }\n\n      if (!_get()) {\n        return null\n      }\n\n      const _pc = {\n        // GETTERS\n        getTech: () => _get().technologies || [],\n        getDescription: () => _get().description || '',\n        getGoals: () => _get().goals || [],\n        getTargetAudience: () => _get().targetAudience || [],\n        getImpacts: () => _get().impacts || [],\n        getImages: () => _get().images || [],\n        // SETTERS\n        setTech: (technologies) => {\n          _get().technologies = technologies\n          _save()\n        },\n        setDescription: (description) => {\n          _get().description = description\n          _save()\n        },\n        setGoals: (goals) => {\n          _get().goals = goals\n          _save()\n        },\n        setTargetAudience: (targetAudience) => {\n          _get().targetAudience = targetAudience\n          _save()\n        },\n        setImpacts: (impacts) => {\n          _get().impacts = impacts\n          _save()\n        },\n        setImages: (images) => {\n          _get().images = images\n          _save()\n        },\n      }\n\n      return _pc\n    }\n  }\n\n  // Initialize localStorage\n  if (!localStorage.getItem(STORAGE_KEY))\n    _save()\n  else {\n    _data = JSON.parse(localStorage.getItem(STORAGE_KEY))\n  }\n\n  return _controller\n}\n\nconst _storage = Storage()\n\nexport default _storage\n","import React, { useState, useContext, useEffect } from 'react'\nimport { Route, NavLink, useParams } from 'react-router-dom'\nimport { ModeContext } from '../App'\nimport storage from '../controllers/storage'\nimport '../css/NavBar.css'\n\nconst NavHeader = ({ title, children }) => {\n  return (\n    <div className=\"navbar--header\">\n      <h4 className=\"navbar--header__title\">{title}</h4>\n      {children}\n    </div>\n  )\n}\n\nconst NavFooter = ({\n  addNewProject = false\n}) => {\n  const { mode, setMode } = useContext(ModeContext)\n\n  return (\n    <div className=\"navbar--footer\">\n      {mode === 'edit' &&\n        <>\n          {addNewProject &&\n            <button\n              className=\"navlink navlink--add\"\n              onClick={addNewProject}\n            >\n              + New Project\n            </button>\n          }\n\n          <NavLink\n            to=\"/?export\"\n            className=\"navlink navlink--export\"\n          >\n            Export Data\n          </NavLink>\n        </>\n      }\n\n      <button\n        className={`navlink navlink--mode navlink--mode__${mode}`}\n        onClick={() => {\n          if (mode === 'static') {\n            setMode('edit')\n          } else if (mode === 'edit') {\n            setMode('static')\n          }\n        }}\n      >\n        MODE: <span className=\"navlink--mode__type\">{mode}</span>\n      </button>\n    </div>\n  )\n}\n\nconst ProjectLinks = () => {\n  const { mode } = useContext(ModeContext)\n\n  const [projects, setProjects] = useState(null)\n\n  useEffect(() => {\n    setProjects(\n      storage.getProjects({\n        staticData: (mode === 'static')\n      }).map(project => ({\n        text: project, editing: false\n      }))\n    )\n  }, [mode])\n\n  const addNewProject = () => {\n    setProjects([...projects, { text: '', editing: true }])\n  }\n\n  const setProject = (i) => (e) => {\n    projects[i].text = e.target.value\n    setProjects([...projects])\n  }\n\n  const saveProject = (i) => () => {\n    projects[i].editing = false\n\n    if (projects[i].text.trim() === '') {\n      projects.splice(i, 1)\n      return setProjects([...projects])\n    }\n\n    setProjects([...projects])\n    storage.addProject(projects[i].text)\n  }\n\n  if (!projects) return null\n\n  return (\n    <div className=\"navbar\">\n      <NavHeader title=\"My Projects\">\n        <div className=\"navbar--links\">\n          {projects.map((project, i) => (\n            (project.editing) ?\n              <input\n                key={i}\n                value={project.text}\n                className=\"navlink navlink--edit\"\n                onChange={setProject(i)}\n                onBlur={saveProject(i)}\n                autoFocus\n              /> :\n              <NavLink\n                key={i}\n                to={`/${project.text}/`}\n                className=\"navlink\"\n              >\n                {project.text}\n              </NavLink>\n          ))}\n        </div>\n      </NavHeader>\n\n      <NavFooter addNewProject={addNewProject} />\n    </div>\n  )\n}\n\nconst ProjectDetailLinks = () => {\n  const { project } = useParams()\n\n  return (\n    <div className=\"navbar\">\n      <NavHeader title={project}>\n        <div className=\"navbar--links\">\n          <NavLink\n            to={`/${project}/`}\n            className=\"navlink\"\n            activeClassName=\"navlink--active\"\n            replace\n            exact\n          >\n            Dashboard\n          </NavLink>\n\n          {/* <NavLink\n            to={`/${project}/design/ideas`}\n            className=\"navlink\"\n            activeClassName=\"navlink--active\"\n            replace\n            exact\n          >\n            Design Ideas\n          </NavLink> */}\n\n          {/* <NavLink\n            to={`/${project}/react-components`}\n            className=\"navlink\"\n            activeClassName=\"navlink--active\"\n            replace\n            exact\n          >\n            React Components\n          </NavLink> */}\n\n          {/* <NavLink\n            to={`/${project}/timeline`}\n            className=\"navlink\"\n            activeClassName=\"navlink--active\"\n            replace\n            exact\n          >\n            Timeline\n          </NavLink> */}\n\n          {/* <NavLink\n            to={`/${project}/uml`}\n            className=\"navlink\"\n            activeClassName=\"navlink--active\"\n            replace\n            exact\n          >\n            UML\n          </NavLink> */}\n\n          {/* <NavLink\n            to={`/${project}/tasks`}\n            className=\"navlink\"\n            activeClassName=\"navlink--active\"\n            replace\n            exact\n          >\n            Tasks\n          </NavLink> */}\n\n          {/* <NavLink\n            to={`/${project}/statistics`}\n            className=\"navlink\"\n            activeClassName=\"navlink--active\"\n            replace\n            exact\n          >\n            Statistics\n          </NavLink> */}\n\n          {/* <NavLink\n            to={`/${project}/settings`}\n            className=\"navlink\"\n            activeClassName=\"navlink--active\"\n            replace\n            exact\n          >\n            Settings\n          </NavLink> */}\n        </div>\n      </NavHeader>\n\n      <NavFooter />\n    </div>\n  )\n}\n\nconst NavBar = () => {\n  return (\n    <>\n      <Route path=\"/\" exact>\n        <ProjectLinks />\n      </Route>\n\n      <Route path=\"/:project\">\n        <ProjectDetailLinks />\n      </Route>\n    </>\n  )\n}\n\nexport default NavBar\n","import React from 'react'\nimport '../css/Section.css'\n\nconst Section = ({\n  title,\n  sectionStyle = {},\n  bodyStyle = {},\n  children\n}) => {\n  return (\n    <div className=\"section\" style={sectionStyle}>\n      <h6\n        className=\"section--title\"\n      >\n          {title}\n        </h6>\n      <div className=\"section--body\" style={bodyStyle}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Section\n","import React, { useState, useContext, useEffect } from 'react'\nimport Section from './Section'\nimport { ModeContext } from '../App'\n\nconst noop = () => {}\n\nconst TechTab = ({\n  color,\n  styles = {},\n  first = false,\n  last = false,\n  editing = false,\n  onChange = noop,\n  setValue = noop,\n  setEditing = noop,\n  onClick = false,\n  children\n}) => {\n  let _styles = {\n    ...styles\n  }\n\n  if (color) {\n    _styles.backgroundColor = color\n  }\n\n  if (first) {\n    _styles.marginLeft = '0'\n  }\n\n  if (last) {\n    _styles.marginRight = '0'\n  }\n\n  const renderBody = () => {\n    if (!editing)\n      return children\n    return (\n      <input\n        type=\"text\"\n        value={children}\n        className=\"dashboard--techtab__edit\"\n        style={{\n          width: `${children.length * 10}px`\n        }}\n        onChange={(e) => onChange(e.target.value)}\n        onKeyDown={({ key }) => (key === 'Enter' || key === 'Return') && setValue()}\n        onBlur={setValue}\n        autoFocus\n      />\n    )\n  }\n\n  return (\n    <div\n      className=\"dashboard--techtab\"\n      style={_styles}\n      onClick={onClick || setEditing}\n    >\n      {renderBody()}\n    </div>\n  )\n}\n\nconst TechSection = ({ store }) => {\n  const { mode } = useContext(ModeContext)\n  const [tech, setTech] = useState([])\n\n  useEffect(() => {\n    setTech(\n      store.getTech().map(t => ({\n        text: t, editing: false\n      }))\n    )\n  }, [store, mode])\n\n  const [editing, setEditing] = useState(false)\n\n  const addTech = () => {\n    setTech([...tech, { text: '', editing: true }])\n    setEditing(true)\n  }\n\n  const editTech = (i) => (newTech) => {\n    tech[i].text = newTech\n    setTech([...tech])\n  }\n\n  const setEditingFor = (i) => () => {\n    if (mode === 'edit') {\n      tech[i].editing = true\n      setEditing(true)\n    }\n  }\n\n  const finishEditingTech = (i) => () => {\n    if (tech[i].text.trim() === '')\n      tech.splice(i, 1)\n    else\n      tech[i].editing = false\n\n    setTech([...tech])\n    setEditing(false)\n    store.setTech(tech.map(t => t.text))\n  }\n\n  return (\n    <Section title=\"Technologies Used\">\n      {tech && tech.map((t, i) => (\n        <TechTab\n          key={i}\n          first={i === 0}\n          color=\"#705CF1\"\n          editing={t.editing}\n          onChange={editTech(i)}\n          setEditing={setEditingFor(i)}\n          setValue={finishEditingTech(i)}\n        >\n          {t.text}\n        </TechTab>\n      ))}\n\n      {(mode === 'edit') && !editing && <TechTab\n        last\n        color=\"transparent\"\n        styles={{\n          color: '#705CF1',\n          paddingLeft: '20px',\n          paddingRight: '20px',\n          border: '2px solid #705CF1',\n          cursor: 'pointer'\n        }}\n        onClick={() => addTech()}\n      >\n        +\n      </TechTab>}\n    </Section>\n  )\n}\n\nexport default TechSection\n","import React from 'react'\nimport '../css/Card.css'\n\nconst noop = () => {}\n\nconst Card = ({\n  style = {},\n  onClick = noop,\n  children\n}) => (\n  <div style={style} className=\"card\" onClick={onClick}>\n    {children}\n  </div>\n)\n\nexport default Card\n","import React, { useState, useContext, useEffect } from 'react'\nimport TextareaAutosize from 'react-textarea-autosize'\nimport Section from './Section'\nimport Card from './Card'\nimport { ModeContext } from '../App'\n\nconst DescriptionSection = ({ store }) => {\n  const { mode } = useContext(ModeContext)\n  const [description, setDescription] = useState('')\n\n  useEffect(() => {\n    setDescription(\n      store.getDescription()\n    )\n  }, [store, mode])\n  \n  const [editing, setEditing] = useState(false)\n\n  const doneEditing = () => {\n    setEditing(false)\n    store.setDescription(description)\n  }\n\n  return (\n    <Section title=\"Project Description\">\n      <Card onClick={() => setEditing(mode === 'edit')}>\n        <h4\n          className=\"dashboard--description\"\n        >\n          {editing &&\n            <TextareaAutosize\n              value={description}\n              className=\"dashboard--description__edit\"\n              onChange={(e) => setDescription(e.target.value)}\n              onBlur={doneEditing}\n              autoFocus\n            />\n          }\n          {!editing && description.split('\\n\\n').map((d, i) => (\n            <p key={i}>{d}</p>\n          ))}\n        </h4>\n      </Card>\n    </Section>\n  )\n}\n\nexport default DescriptionSection\n","import React, { useState, useContext, useEffect } from 'react'\nimport Section from './Section'\nimport Card from './Card'\nimport { ModeContext } from '../App'\n\nconst GoalSection = ({ store }) => {\n  const { mode } = useContext(ModeContext)\n  const [goals, setGoals] = useState([])\n\n  useEffect(() => {\n    setGoals(\n      store.getGoals().map(g => ({\n        text: g, editing: false\n      }))\n    )\n  }, [store, mode])\n\n  const [editing, setEditing] = useState(false)\n\n  const addGoal = () => {\n    setEditing(true)\n    setGoals([ ...goals, { text: '', editing: true }])\n  }\n\n  const setGoalValue = (i) => (e) => {\n    goals[i].text = e.target.value\n    setGoals([...goals])\n  }\n\n  const editGoal = (i) => () => {\n    if (mode === 'edit') {\n      goals[i].editing = true\n      setGoals([...goals])\n    }\n  }\n\n  const doneEditing = (i) => () => {\n    setEditing(false)\n    goals[i].editing = false\n\n    if (goals[i].text.trim() === '') {\n      goals.splice(i, 1)\n    }\n\n    setGoals([...goals])\n    store.setGoals(goals.map(g => g.text))\n  }\n\n  return (\n    <Section\n      title=\"Goal\"\n      sectionStyle={{ flex: '1' }}\n      bodyStyle={{ paddingRight: '12.5px' }}\n    >\n      <Card>\n        <ul className=\"dashboard--list\">\n          {goals.map((g, i) => (\n            <li\n              key={i}\n              onClick={editGoal(i)}\n            >\n              {g.editing &&\n                <input\n                  className=\"dashboard--list__edit\"\n                  value={g.text}\n                  onChange={setGoalValue(i)}\n                  onBlur={doneEditing(i)}\n                  autoFocus\n                />\n              }\n              {!g.editing && g.text}\n            </li>\n          ))}\n        </ul>\n\n        {(mode === 'edit') && !editing &&\n          <button\n            className=\"dashboard--list__add\"\n            onClick={addGoal}\n          >\n            +\n          </button>\n        }\n      </Card>\n    </Section>\n  )\n}\n\nexport default GoalSection\n","import React, { useState, useContext, useEffect } from 'react'\nimport Section from './Section'\nimport Card from './Card'\nimport { ModeContext } from '../App'\n\nconst TargetAudienceSection = ({ store }) => {\n  const { mode } = useContext(ModeContext)\n  const [audience, setAudience] = useState([])\n\n  useEffect(() => {\n    setAudience(\n      store.getTargetAudience().map(ta => ({\n        text: ta, editing: false\n      }))\n    )\n  }, [store, mode])\n\n  const [editing, setEditing] = useState(false)\n\n  const addAudience = () => {\n    setEditing(true)\n    setAudience([ ...audience, { text: '', editing: true }])\n  }\n\n  const setAudienceValue = (i) => (e) => {\n    audience[i].text = e.target.value\n    setAudience([...audience])\n  }\n\n  const editAudience = (i) => () => {\n    if (mode === 'edit') {\n      audience[i].editing = true\n      setAudience([...audience])\n    }\n  }\n\n  const doneEditing = (i) => () => {\n    setEditing(false)\n    audience[i].editing = false\n\n    if (audience[i].text.trim() === '') {\n      audience.splice(i, 1)\n    }\n\n    setAudience([...audience])\n    store.setTargetAudience(audience.map(ta => ta.text))\n  }\n\n  return (\n    <Section\n      title=\"Target Audience\"\n      sectionStyle={{ flex: '1' }}\n      bodyStyle={{ paddingLeft: '12.5px' }}\n    >\n      <Card>\n        <ul className=\"dashboard--list\">\n          {audience.map((g, i) => (\n            <li\n              key={i}\n              onClick={editAudience(i)}\n            >\n              {g.editing &&\n                <input\n                  className=\"dashboard--list__edit\"\n                  value={g.text}\n                  onChange={setAudienceValue(i)}\n                  onBlur={doneEditing(i)}\n                  autoFocus\n                />\n              }\n              {!g.editing && g.text}\n            </li>\n          ))}\n        </ul>\n\n        {(mode === 'edit') && !editing &&\n          <button\n            className=\"dashboard--list__add\"\n            onClick={addAudience}\n          >\n            +\n          </button>\n        }\n      </Card>\n    </Section>\n  )\n}\n\nexport default TargetAudienceSection\n","import React, { useState, useContext, useEffect } from 'react'\nimport Section from './Section'\nimport Card from './Card'\nimport { ModeContext } from '../App'\n\nconst ImpactSection = ({ store }) => {\n  const { mode } = useContext(ModeContext)\n\n  const [impacts, setImpacts] = useState([])\n\n  useEffect(() => {\n    setImpacts(\n      store.getImpacts().map(i => ({\n        text: i, editing: false\n      }))\n    )\n  }, [store, mode])\n\n  const [editing, setEditing] = useState(false)\n\n  const addImpact = () => {\n    setEditing(true)\n    setImpacts([ ...impacts, { text: '', editing: true }])\n  }\n\n  const setImpactValue = (i) => (e) => {\n    impacts[i].text = e.target.value\n    setImpacts([...impacts])\n  }\n\n  const editImpact = (i) => () => {\n    if (mode === 'edit') {\n      impacts[i].editing = true\n      setImpacts([...impacts])\n    }\n  }\n\n  const doneEditing = (i) => () => {\n    setEditing(false)\n    impacts[i].editing = false\n\n    if (impacts[i].text.trim() === '') {\n      impacts.splice(i, 1)\n    }\n\n    setImpacts([...impacts])\n    store.setImpacts(impacts.map(i => i.text))\n  }\n\n  return (\n    <Section\n      title=\"Impact\"\n      sectionStyle={{ flex: '1' }}\n      bodyStyle={{ paddingLeft: '12.5px' }}\n    >\n      <Card>\n        <ul className=\"dashboard--list\">\n          {impacts.map((g, i) => (\n            <li\n              key={i}\n              onClick={editImpact(i)}\n            >\n              {g.editing &&\n                <input\n                  className=\"dashboard--list__edit\"\n                  value={g.text}\n                  onChange={setImpactValue(i)}\n                  onBlur={doneEditing(i)}\n                  autoFocus\n                />\n              }\n              {!g.editing && g.text}\n            </li>\n          ))}\n        </ul>\n\n        {(mode === 'edit') && !editing &&\n          <button\n            className=\"dashboard--list__add\"\n            onClick={addImpact}\n          >\n            +\n          </button>\n        }\n      </Card>\n    </Section>\n  )\n}\n\nexport default ImpactSection\n","import React, { useState, useContext, useRef, useEffect } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport TechSection from './TechSection'\nimport DescriptionSection from './DescriptionSection'\nimport GoalSection from './GoalSection'\nimport TargetAudienceSection from './TargetAudienceSection'\nimport ImpactSection from './ImpactSection'\nimport Section from './Section'\nimport { ModeContext } from '../App'\nimport storage from '../controllers/storage'\nimport '../css/Dashboard.css'\nimport '../css/ImageSection.css'\n\nconst Title = ({ children }) => (\n  <div className=\"dashboard--header-title\">\n    <h3 className=\"dashboard--header-title__h4\">{children}</h3>\n  </div>\n)\n\nconst SocialLink = ({\n  url,\n  icon\n}) => {\n  let Icon\n\n  if (icon === 'github') {\n    Icon = <i className=\"fa fa-github\"></i>\n  }\n\n  return (\n    <a\n      href={url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {Icon}\n    </a>\n  )\n}\n\nconst Dashboard = () => {\n  const { mode } = useContext(ModeContext)\n  const { project } = useParams()\n  const history = useHistory()\n  const fileInput = useRef(null)\n  const store = storage.project(project, mode)\n\n  const [images, setImages] = useState([])\n\n  useEffect(() => {\n    setImages(store.getImages())\n  }, [mode])\n\n  if (!store) {\n    window.location = '/'\n  }\n\n  const addImages = (toAdd) => {\n    const newImages = [...images, ...toAdd]\n    store.setImages(newImages)\n    setImages(newImages)\n  }\n\n  if (!store) {\n    history.replace('/')\n    return null\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard--header\">\n        <Title>\n          {project}\n        </Title>\n\n        <div className=\"dashboard--header-links\">\n          {/* Need to use something like `store.getLinks()` here */}\n          {/* <SocialLink url=\"https://github.com\" icon=\"github\" /> */}\n        </div>\n      </div>\n      \n      <TechSection store={store} />\n      <DescriptionSection store={store} />\n\n      <div style={{ display: 'flex' }}>\n        <GoalSection store={store} />\n        <TargetAudienceSection store={store} />\n        <ImpactSection store={store} />\n      </div>\n\n      <Section\n        title=\"Images\"\n        bodyStyle={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          alignItems: 'center'\n        }}\n      >\n        {mode === 'edit' &&\n          <div\n            className=\"dashboard--image__add\"\n            onClick={() => fileInput.current.click()}\n          >\n            <span>+</span>\n            <input ref={fileInput} onChange={(e) => {\n              const processedImages = []\n              const totalFiles = e.target.files.length\n\n              for (let i = 0; i < totalFiles; ++i) {\n                const reader = new FileReader()\n                const file = e.target.files[i]\n\n                reader.onload = (e) => {\n                  processedImages.push(e.target.result)\n\n                  if (processedImages.length === totalFiles) {\n                    addImages(processedImages)\n                  }\n                }\n\n                reader.readAsDataURL(file)\n              }\n            }} style={{ display: 'none' }} type=\"file\" multiple />\n          </div>\n        }\n\n        {images.map((image, i) => (\n          <img className=\"image\" key={i} src={image} />\n        ))}\n      </Section>\n\n      {/* <Section title=\"Drawings\">\n        <a href=\"https://i.ibb.co/hMNSRKW/IMG-1310.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-1\" src=\"https://i.ibb.co/hMNSRKW/IMG-1310.jpg\" />\n        </a>\n\n        <a href=\"https://i.ibb.co/nwtsP3d/IMG-1308.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-2\" src=\"https://i.ibb.co/nwtsP3d/IMG-1308.jpg\" />\n        </a>\n\n        <a href=\"https://i.ibb.co/M1mMxnQ/IMG-1311.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-3\" src=\"https://i.ibb.co/M1mMxnQ/IMG-1311.jpg\" />\n        </a>\n\n        <a href=\"https://i.ibb.co/SrKxCGc/IMG-1309.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-4\" src=\"https://i.ibb.co/SrKxCGc/IMG-1309.jpg\" />\n        </a>\n      </Section> */}\n    </div>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport Section from './Section'\nimport '../css/DesignIdeas.css'\n\nconst DesignIdeas = () => {\n  return (\n    <div className=\"design-ideas\">\n      {/* <Section title=\"Design Ideas\">\n        <a href=\"https://i.ibb.co/hMNSRKW/IMG-1310.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-1\" src=\"https://i.ibb.co/hMNSRKW/IMG-1310.jpg\" />\n        </a>\n\n        <a href=\"https://i.ibb.co/nwtsP3d/IMG-1308.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-2\" src=\"https://i.ibb.co/nwtsP3d/IMG-1308.jpg\" />\n        </a>\n\n        <a href=\"https://i.ibb.co/M1mMxnQ/IMG-1311.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-3\" src=\"https://i.ibb.co/M1mMxnQ/IMG-1311.jpg\" />\n        </a>\n\n        <a href=\"https://i.ibb.co/SrKxCGc/IMG-1309.jpg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"drawing-image\" alt=\"Drawings-4\" src=\"https://i.ibb.co/SrKxCGc/IMG-1309.jpg\" />\n        </a>\n      </Section> */}\n    </div>\n  )\n}\n\nexport default DesignIdeas\n","import React, { useState } from 'react';\nimport { Route, useLocation } from 'react-router-dom'\nimport NavBar from './components/NavBar'\nimport Dashboard from './components/Dashboard'\nimport DesignIdeas from './components/DesignIdeas'\nimport storage from './controllers/storage'\nimport './css/App.css'\n\nexport const ModeContext = React.createContext('static')\n\nfunction App() {\n  const [mode, setMode] = useState('static')\n  const { search } = useLocation()\n\n  return (\n    <ModeContext.Provider value={{ mode, setMode }}>\n      <div className=\"App\">\n        <div className=\"container\">\n          <NavBar />\n\n          <Route path=\"/\" exact>\n            {(search === '?export') ?\n              (\n                <div style={{ flex: '4', overflow: 'scroll', margin: '25px' }}>\n                  <pre>{storage.getJSON({ staticData: (mode === 'static') })}</pre>\n                </div>\n              ) : <div style={{ flex: '4' }}></div>\n            }\n          </Route>\n\n          <Route path=\"/:project/\" exact>\n            <Dashboard />\n          </Route>\n\n          <Route path=\"/:project/design/ideas\" exact>\n            <DesignIdeas />\n          </Route>\n\n          <Route path=\"/:project/react/components\" exact>\n            \n          </Route>\n\n          <Route path=\"/:project/timeline\" exact>\n            \n          </Route>\n\n          <Route path=\"/:project/uml\" exact>\n            \n          </Route>\n\n          <Route path=\"/:project/tasks\" exact>\n            \n          </Route>\n\n          <Route path=\"/:project/statistics\" exact>\n            \n          </Route>\n\n          <Route path=\"/:project/settings\" exact>\n            \n          </Route>\n        </div>\n      </div>\n    </ModeContext.Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router\n} from 'react-router-dom'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './css/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}